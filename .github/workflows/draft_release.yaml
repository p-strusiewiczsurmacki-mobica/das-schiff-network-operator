name: Create Draft Release

on:
  push:
    tags:
      - "v*"

jobs:
  draft_release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.18"

      - name: Install packages
        run: sudo apt-get install -y llvm clang libbpf-dev libbpf-dev linux-headers-generic-hwe-20.04

      - name: Build
        run: |
          make build

      - name: Create Licenses Report
        run: |
          make licenses-report
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: out/*.*
          # body_path: _releasenotes/${{ env.RELEASE_TAG }}.md

  release_image:
    name: Build and Push Release Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.18"

      - name: Install packages
        run: sudo apt-get install -y llvm clang libbpf-dev libbpf-dev linux-headers-generic-hwe-20.04

      - name: Build
        run: |
          make build

      - name: Create Licenses Report
        run: |
          make licenses-report

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ghcr.io/telekom/das-schiff-network-operator

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
