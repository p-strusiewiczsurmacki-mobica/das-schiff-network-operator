// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/telekom/das-schiff-network-operator/pkg/reconciler (interfaces: ConfigReconcilerInterface)

// Package mock_reconciler is a generated GoMock package.
package mock_reconciler

import (
	reflect "reflect"

	v1alpha1 "github.com/telekom/das-schiff-network-operator/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockConfigReconcilerInterface is a mock of ConfigReconcilerInterface interface.
type MockConfigReconcilerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigReconcilerInterfaceMockRecorder
}

// MockConfigReconcilerInterfaceMockRecorder is the mock recorder for MockConfigReconcilerInterface.
type MockConfigReconcilerInterfaceMockRecorder struct {
	mock *MockConfigReconcilerInterface
}

// NewMockConfigReconcilerInterface creates a new mock instance.
func NewMockConfigReconcilerInterface(ctrl *gomock.Controller) *MockConfigReconcilerInterface {
	mock := &MockConfigReconcilerInterface{ctrl: ctrl}
	mock.recorder = &MockConfigReconcilerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigReconcilerInterface) EXPECT() *MockConfigReconcilerInterfaceMockRecorder {
	return m.recorder
}

// CreateConfigForNode mocks base method.
func (m *MockConfigReconcilerInterface) CreateConfigForNode(arg0 string, arg1 *v1.Node) (*v1alpha1.NodeNetworkConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfigForNode", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.NodeNetworkConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfigForNode indicates an expected call of CreateConfigForNode.
func (mr *MockConfigReconcilerInterfaceMockRecorder) CreateConfigForNode(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfigForNode", reflect.TypeOf((*MockConfigReconcilerInterface)(nil).CreateConfigForNode), arg0, arg1)
}
